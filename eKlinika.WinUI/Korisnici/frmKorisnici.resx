<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PhoneNumber.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>